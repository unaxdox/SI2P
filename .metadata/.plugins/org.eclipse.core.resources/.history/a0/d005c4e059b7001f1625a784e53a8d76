package eredua.bean;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.context.FacesContext;
import businessLogic.BLFacade;
import businessLogic.FacadeBean;
import exceptions.DriverAlreadyExistsException;

@ManagedBean(name = "registerBean")
@RequestScoped
public class RegisterBean {

	private String email;
	private String name;
	private String password;
	private String confirmPassword;
	private String userType; // Driver o Rider

	public String createDriver() {
		BLFacade facadeBL = FacadeBean.getBusinessLogic();
		// Validar que las contraseñas coincidan
		if (!password.equals(confirmPassword)) {
			FacesContext.getCurrentInstance().addMessage(null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error", "Las contraseñas no coinciden."));
			return null;
		}

		try {
			if ("Driver".equals(userType)) {
				facadeBL.createDriver(email, name, password);
				FacesContext.getCurrentInstance().addMessage(null,
						new FacesMessage(FacesMessage.SEVERITY_INFO, "Éxito", "Usuario registrado como Driver."));
			} else if ("Rider".equals(userType)) {
				facadeBL.createRider(email, name, password); // Método para registrar Riders
				FacesContext.getCurrentInstance().addMessage(null,
						new FacesMessage(FacesMessage.SEVERITY_INFO, "Éxito", "Usuario registrado como Rider."));
			} else {
				FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN,
						"Advertencia", "Debe seleccionar un tipo de usuario."));
				return null;
			}
			return "login"; // Redirige a la página de login
		} catch (Exception e) {
			FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error",
					"No se pudo registrar el usuario: " + e.getMessage()));
			return null;
		}
	}

	public String close() {
		return "index"; // Vuelve al índice o página inicial
	}

	// Getters y Setters
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getConfirmPassword() {
		return confirmPassword;
	}

	public void setConfirmPassword(String confirmPassword) {
		this.confirmPassword = confirmPassword;
	}

	public String getUserType() {
		return userType;
	}

	public void setUserType(String userType) {
		this.userType = userType;
	}
}
